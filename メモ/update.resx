<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAA
        AAD19fUA9PT0APX09ACsqqsAy8W+AI2QlQDDxMUAp6epAKmnpwDx8vMAq6mqAJOPjgCSjYoAur7EAPDt
        6gCYmpsAk5OVAPLx8QCsrK4A0s7KAJSXnACno6EApaWlAKGenADc3N4AqauvANHKxADO09oApKOjAPHt
        6gB4eHoAs7W4AN7Z0wB0eH8Ao6KjAKynpACIiIwAwMHDAK6sqgCdnZ8A8/P0AKWkpACcnZ4A5N7YAFJR
        VADl5+sA083GAIuQmADb2dYAfHt7AKytrwCTkI4ApqamAKurqwDT0dEAr7CyAIB9ewCipKYA7u/xAL68
        ugCZmJgA8PHzAKunpQCioqEAwsLDAK6wsgCKhoMAtbW1AKKiogC3uLsAr66uAKampQCjo6YA39zZAL3A
        xADy8vIA7+/vAPPz8wCOjo4ADw8PAIWFhQBiYmIAlZWVAMrKygAqKioA7u7uAHt7ewBpaWkAz8/PANvb
        2wC6uroALy8vAJycnAC+vr4AX19fAGpqagCIiIgAQ0NDAL29vQDZ2dkAQEBAALe3twBxcXEAf39/AMHB
        wQAyMjIA5+fnAMTExABISEgA8PDwANPT0wA8PDwA0NDQADk5OQArKysA39/fAOzs7AAmJiYA3t7eADo6
        OgDDw8MAioqKAIuLiwBWVlYAxcXFAMnJyQB9fX0Azs7OACgoKACnp6cAZmZmAHZ2dgDx8fEAVVVVAGxs
        bAA7OzsAISEhAFBQUADMzMwAwMDAAFFRUQDq6uoAYWFhAG5ubgBSUlIA6+vrAEdHRwDd3d0Arq6uAJ+f
        nwCBgYEAsbGxAKCgoACTk5MAgICAAKysrADp6ekAdXV1AKqqqgB4eHgAzc3NAG9vbwAnJycAPz8/ACUl
        JQA1NTUAPT09AB4eHgApKSkALS0tAEpKSgDt7e0Aj4+PANjY2AB6enoAd3d3ALm5uQBgYGAAy8vLAJGR
        kQDl5eUATU1NAHl5eQCCgoIA0dHRAJubmwDk5OQAvLy8AKGhoQCXl5cAY2NjALKysgDV1dUAsLCwALS0
        tAB0dHQAkpKSAObm5gC7u7sApKSkAJ2dnQDU1NQAh4eHAKOjowCUlJQAjY2NANra2gCDg4MAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEB
        AAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQAAAAEAAAAAAQEAAAAAAAAAAAAAAQEBAQEBAQEBAQABAAAA
        AAAAAAAAAQEBAQAAAAAAAAEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAQEBAQAAAAABAQABAQEBAQEBAQEB
        AQEAAQEBAQEAAAAAAQABAAAAAAECAwQFBgcICQoBAQsMDQ4PEBESExQVFhcYGRobAAAAAAAcHR4fICEB
        IgEBIyQlASYnKCIBKSoBKywtLi8AAAAAMDEyMzQ1Njc4OTo7PD0BPj9AMUFCQ0RFRkdISUoAAAAAAAAA
        AAEBAQAAAAAAAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLTExMTExMTExMTExMSwBLSwAAAEwBAABNTE0A
        AAAAAU5PT09PT09PT09PT09QAVFSAABTVFUAAVZXWEsAAAAAWVpbXF1dXl9dXWBhYmNNZGUAAWZnAQBo
        aWoAAAAAAAAAAWtsbQFubwEAcHFNAQFycwB0dXYAdHd4AQAAAAAAAAAAAXl6AQF7fABtW31+f4BNAIGC
        AQGDegEAAAAAAAAAAAAAhIVwAF2GTQGHUIh6bAABiYoAi4yEAAAAAAAAAAAAAAABWYVtTYmNAY5wTWuP
        AGOQTZGSkwEAAAAAAAAAAAAAAAAAlHoBNJV0lpeRmJmNmpucnZ4BAAAAAAAAAAAAAAAAAAABn6BtgqFp
        oqOkpaano6ipqksAAAAAAAAAAAAAAAAAAAGNX6usWK2uAa9qsFyNsasAAQAAAAAAAAAAAAAAAAAAAACy
        s7RgS461oU22kbe4AAAAAAAAAAAAAAAAAAAAAAAAAAG5sqyrg3RQuk67vAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAGqxvWC+v6GVwLdLAAAAAAAAAAAAAAAAAAAAAAAAAAAAjcGPwsM0t1zExQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAV2gxmXHyGsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ7JykTLAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAATMfMzW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzs9zAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>